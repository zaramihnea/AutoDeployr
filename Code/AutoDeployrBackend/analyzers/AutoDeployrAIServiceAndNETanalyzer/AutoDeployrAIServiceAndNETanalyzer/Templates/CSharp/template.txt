using System;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using System.Text.Json;

namespace YourNamespace.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class OperationController : ControllerBase
    {
        private readonly ILogger<OperationController> _logger;

        public OperationController(ILogger<OperationController> logger)
        {
            _logger = logger;
        }

        [HttpGet("execute")]
        public IActionResult ExecuteGet([FromQuery] int? x)
        {
            _logger.LogInformation("Processing GET request");

            if (x.HasValue)
            {
                int result = x.Value + 1 + 2;
                return Ok(new { result });
            }
            
            return BadRequest("Missing or invalid 'x' parameter.");
        }

        [HttpPost("execute")]
        public async Task<IActionResult> ExecutePost([FromBody] RequestModel model)
        {
            _logger.LogInformation("Processing POST request");
            
            if (model == null || !model.X.HasValue)
            {
                return BadRequest("Missing or invalid 'x' in body.");
            }
            
            int result = model.X.Value + 1 + 2;
            return Ok(new { result });
        }
    }
    
    public class RequestModel
    {
        public int? X { get; set; }
    }
} 